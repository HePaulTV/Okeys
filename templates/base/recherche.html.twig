{% extends 'base.html.twig' %}

{% block title %}Annonces{% endblock %}

{% block body %}
<h1 class="text-center background-P climatecrisis text-W py-5" class="climatecrisis text-B">Recherche d'annonces</h1>

<div class="container-fluid pt-3">
  <div class="row">
    <div class="col-md-2 background-S pt-5 pb-3 pe-5 ps-4 rounded-end-5 rounded-1">
      <form id="filtresForm">
        <ul class="list-unstyled">
          <li>
            <label for="prixMin" class="montserrat500 text-B">Prix minimum:</label>
            <input type="number" id="prixMin" min="0" class="form-control">
          </li>
          <li>
            <label for="prixMax" class="montserrat500 text-B">Prix maximum:</label>
            <input type="number" id="prixMax" min="0" class="form-control">
          </li>
          <hr class="my-3">
          <li>
            <label for="surfaceMin" class="montserrat500 text-B">Surface minimum:</label>
            <input type="number" id="surfaceMin" min="0" class="form-control">
          </li>
          <li>
            <label for="surfaceMax" class="montserrat500 text-B">Surface maximum:</label>
            <input type="number" id="surfaceMax" min="0" class="form-control">
          </li>
          <hr class="my-3">
          <li>
            <label for="jardin" class="montserrat500 text-B">Jardin:</label>
            <select id="jardin" class="form-select mb-3">
              <option value="true" class="montserrat500 text-B">Avec</option>
              <option value="false" class="montserrat500 text-B">Sans</option>
              <option value="peu_importe" class="montserrat500 text-B" selected>Peu Importe</option>
            </select>
          </li>
          <hr class="my-3">
          <li>
            <label for="garage" class="montserrat500 text-B">Garage:</label>
            <select id="garage" class="form-select mb-3">
              <option value="true" class="montserrat500 text-B">Avec</option>
              <option value="false" class="montserrat500 text-B">Sans</option>
              <option value="peu_importe" class="montserrat500 text-B" selected>Peu Importe</option>
            </select>
          </li>
          <hr class="my-3">
          <li class="text-center pt-2">
            <button type="submit" class="btn-custom montserrat800 text-B text-center">Filtrer</button>
          </li>
        </ul>
      </form>
    </div>
    <div class="col-md-10">
      <div class="row row-cols-1 row-cols-md-3" id="annoncesContainer"></div>
    </div>
  </div>
</div>

<style>
  .card-img-top {
    object-fit: cover;
    width: 100%;
    height: 400px; /* ou toute autre hauteur fixe souhaitée */
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const annoncesContainer = document.getElementById('annoncesContainer');

    // Fonction pour afficher les annonces sur la page
    function afficherAnnonces(annonces) {
      annoncesContainer.innerHTML = '';

      annonces.forEach(annonce => {
        const carouselId = `carousel-${annonce.id}`;
        const images = annonce.images;
        const carouselItemsHtml = images.map((image, index) => `
          <div class="carousel-item ${index === 0 ? 'active' : ''}">
            <img src="/Okeys/uploads/fichiers/${image.nom}" class="d-block card-img-top" alt="...">
          </div>`).join('');
        const cardHtml = `
          <div class="col mb-4">
            <div class="card">
              <div id="${carouselId}" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                  ${carouselItemsHtml}
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#${carouselId}" data-bs-slide="prev">
                  <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                  <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#${carouselId}" data-bs-slide="next">
                  <span class="carousel-control-next-icon" aria-hidden="true"></span>
                  <span class="visually-hidden">Next</span>
                </button>
              </div>
              <div class="card-body">
                <h5 class="card-title text-A">${annonce.titre}</h5>
                <p class="card-text">Prix: ${annonce.prix} €</p>
                <p class="card-text">${annonce.description}</p>
              </div>
            </div>
          </div>`;
        annoncesContainer.insertAdjacentHTML('beforeend', cardHtml);
      });
    }

    // Fonction pour récupérer les annonces depuis l'API
    function recupererAnnonces() {
      fetch('/Okeys/public/api/annonces?page=1')
        .then(response => response.json())
        .then(data => {
          const annonces = data['hydra:member'];
          afficherAnnonces(annonces);
        })
        .catch(error => console.error('Erreur lors de la récupération des annonces:', error));
    }

    // Fonction pour récupérer et afficher les annonces filtrées en fonction des valeurs des filtres
    function recupererAnnoncesFiltrees(prixMin, prixMax, surfaceMin, surfaceMax, jardin, garage) {
      const params = new URLSearchParams();
      params.append('prix[gt]', prixMin);
      params.append('prix[lt]', prixMax);
      params.append('m2[gt]', surfaceMin);
      params.append('m2[lt]', surfaceMax);
      params.append('jardin', jardin);
      params.append('garage', garage);

      fetch(`/Okeys/public/api/annonces?page=1&${params.toString()}`)
        .then(response => response.json())
        .then(data => {
          const annoncesFiltrees = data['hydra:member'];
          afficherAnnonces(annoncesFiltrees);
        })
        .catch(error => console.error('Erreur lors de la récupération des annonces filtrées:', error));
    }

    // Bouton du formulaire de filtres
    document.getElementById('filtresForm').addEventListener('submit', function(event) {
      event.preventDefault(); // Empêcher le formulaire de se soumettre normalement

      // Récupérer les valeurs des filtres
      const prixMin = parseInt(document.getElementById('prixMin').value);
      const prixMax = parseInt(document.getElementById('prixMax').value);
      const surfaceMin = parseInt(document.getElementById('surfaceMin').value);
      const surfaceMax = parseInt(document.getElementById('surfaceMax').value);
      const jardin = document.getElementById('jardin').value;
      const garage = document.getElementById('garage').value;

      // Appeler la fonction pour récupérer et afficher les annonces filtrées
      recupererAnnoncesFiltrees(prixMin, prixMax, surfaceMin, surfaceMax, jardin, garage);
    });

    // Appeler la fonction pour récupérer et afficher toutes les annonces lors du chargement de la page
    recupererAnnonces();
  });
</script>
{% endblock %}
